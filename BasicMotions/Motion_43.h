#include "Kamu.h"

//=======playTempMotion,saveTempMotion=======
//---------------필수 설정-------------------
/*재생할 프레임의 총 길이를 의미합니다.*/
#define FRAME_LENGTH 20

//============================================

//==============saveTempMotion==============
//---------------필수 설정-------------------
/*저장할 슬롯의 번호를 지정합니다.*/
#define CUSTOM_SLOT 0
/*저장할 동작의 이름을 지정합니다.
최대 20-Byte 까지 설정 가능하며,
영어는 글자당 1-Byte, 한글은 3-Byte가 사용됩니다.
*/
#define MOTION_NAME "댄스 6            "

/*모션 저장에 사용되는 구조체 입니다.
수정할 필요 없습니다.
*/

/*
모션 저장에 사용되는 구조체 입니다.
수정할 필요 없습니다.
*/
const HEADER motionheader = {
    CUSTOM_SLOT,
    MOTION_NAME,
    FRAME_LENGTH};

/**************************************************************************************************************************************************************/

//===============================TempMotion 각도 설정===========================
/*
각 프레임의 개별 모터의 각도를 설정합니다.
FRAME_LENGTH 개수 만큼 작성해 주세요.
*/
const int8_t frame0[MOTORS_KAMU] = {
38, -18, -22, 
58, 0, 38, 
-38, 0, 0, 
-106, -36, 22, 
-64, 0, -36, 
34, -4, 0};
const int8_t frame1[MOTORS_KAMU] = {
38, 18, -26, 
58, 0, 20, 
-8, 12, 0, 
-102, -38, 22, 
-64, 0, -26, 
14, -12, 0};
const int8_t frame2[MOTORS_KAMU] = {
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0};
const int8_t frame3[MOTORS_KAMU] = {
12, 0, -42, 
-22, 0, 42, 
-36, 6, 0, 
-8, -60, 50, 
18, 4, -32, 
46, 14, 0};
const int8_t frame4[MOTORS_KAMU] = {
72, 50, -56, 
74, 0, 48, 
-36, 12, 0, 
-52, 26, 32, 
-70, 0, -28, 
46, 18, 0};
const int8_t frame5[MOTORS_KAMU] = {
8, 50, -26, 
-54, 0, 26, 
-18, 8, 0, 
-22, 18, 22, 
42, 0, -32, 
46, 14, 0};
const int8_t frame6[MOTORS_KAMU] = {
68, -18, -26, 
66, 0, 26, 
-18, 8, 0, 
-68, -26, 26, 
-62, 0, -32, 
46, 14, 0};
const int8_t frame7[MOTORS_KAMU] = {
78, 50, -26, 
44, 0, 26, 
-18, 8, 0, 
-60, 18, 22, 
-54, 0, -32, 
46, 14, 0};
const int8_t frame8[MOTORS_KAMU] = {
30, 18, -12, 
-42, 0, 26, 
-18, 8, 0, 
-48, -44, 22, 
-48, 0, -32, 
46, 14, 0};
const int8_t frame9[MOTORS_KAMU] = {
30, -2, -26, 
-34, -2, 28, 
-20, 8, -2, 
-52, 10, 34, 
-50, 6, -32, 
46, 14, 4};
const int8_t frame10[MOTORS_KAMU] = {
30, 18, -28, 
-38, 0, 26, 
-18, 8, 0, 
-48, -44, 32, 
-74, 0, -32, 
46, 14, 0};
const int8_t frame11[MOTORS_KAMU] = {
30, -2, -32, 
-56, -2, 28, 
-20, 8, -2, 
-72, 10, 42, 
-74, 6, -32, 
46, 14, 4};
const int8_t frame12[MOTORS_KAMU] = {
30, 18, -26, 
-36, 0, 26, 
-18, 8, 0, 
-48, -44, 34, 
-74, 0, -32, 
46, 14, 0};
const int8_t frame13[MOTORS_KAMU] = {
30, 18, -22, 
-56, 0, 26, 
-18, 8, 0, 
-52, -44, 48, 
-64, 0, -32, 
46, 14, 0};
const int8_t frame14[MOTORS_KAMU] = {
56, 16, -28, 
58, 0, 26, 
-34, -8, 0, 
-94, -16, 24, 
-58, 0, -26, 
34, 8, 0};
const int8_t frame15[MOTORS_KAMU] = {
98, 16, -18, 
76, 0, 26, 
-14, 12, 0, 
-112, -44, 24, 
-48, 0, -18, 
16, -4, 0};
const int8_t frame16[MOTORS_KAMU] = {
98, 16, -42, 
2, 0, 26, 
-18, 8, 0, 
-100, -44, 18, 
-50, 0, -18, 
4, -14, 0};
const int8_t frame17[MOTORS_KAMU] = {
74, 28, -56, 
78, 0, 26, 
-18, 8, 0, 
-74, -16, 56, 
-78, 0, -26, 
18, -8, 0};
const int8_t frame18[MOTORS_KAMU] = {
96, 28, -70, 
12, 0, 26, 
-18, 8, 0, 
-108, -16, 70, 
-12, 0, -26, 
18, -8, 0};
const int8_t frame19[MOTORS_KAMU] = {
74, 28, -56, 
86, 0, 26, 
-18, 8, 0, 
-74, -16, 56, 
-86, 0, -26, 
18, -8, 0};

/*
FRAME_LENGTH 크기에 맞춰 배열을 작성해 주세요.
*/
const int8_t *motion0_angles[FRAME_LENGTH] = {
(int8_t *)&frame0, (int8_t *)&frame1, (int8_t *)&frame2, (int8_t *)&frame3, (int8_t *)&frame4, 
(int8_t *)&frame5, (int8_t *)&frame6, (int8_t *)&frame7, (int8_t *)&frame8, (int8_t *)&frame9, 
(int8_t *)&frame10, (int8_t *)&frame11, (int8_t *)&frame12, (int8_t *)&frame13, (int8_t *)&frame14, 
(int8_t *)&frame15, (int8_t *)&frame16, (int8_t *)&frame17, (int8_t *)&frame18, (int8_t *)&frame19};


//===============================TempMotion 시간 설정===========================
/*
프레임별 동작 시간을 설정합니다.
FRAME_LENGTH 크기에 맞춰 배열을 작성해 주세요.
*/
const uint16_t motion0_times[FRAME_LENGTH] = {
500, 350, 450, 500, 
500, 500, 500, 600, 500, 
300, 300, 300, 300, 300, 
300, 500, 300, 350, 350, 
300};
