#include "Kamu.h"

//=======playTempMotion,saveTempMotion=======
//---------------필수 설정-------------------
/*재생할 프레임의 총 길이를 의미합니다.*/
#define FRAME_LENGTH 18

//============================================

//==============saveTempMotion==============
//---------------필수 설정-------------------
/*저장할 슬롯의 번호를 지정합니다.*/
#define CUSTOM_SLOT 0
/*저장할 동작의 이름을 지정합니다.
최대 20-Byte 까지 설정 가능하며,
영어는 글자당 1-Byte, 한글은 3-Byte가 사용됩니다.
*/
#define MOTION_NAME "댄스 2            "

/*모션 저장에 사용되는 구조체 입니다.
수정할 필요 없습니다.
*/

/*
모션 저장에 사용되는 구조체 입니다.
수정할 필요 없습니다.
*/
const HEADER motionheader = {
    CUSTOM_SLOT,
    MOTION_NAME,
    FRAME_LENGTH};

/**************************************************************************************************************************************************************/

//===============================TempMotion 각도 설정===========================
/*
각 프레임의 개별 모터의 각도를 설정합니다.
FRAME_LENGTH 개수 만큼 작성해 주세요.
*/
const int8_t frame0[MOTORS_KAMU] = {
-14, 0, -54, 
0, -16, 28, 
-18, 10, -16, 
-64, 0, 6, 
-4, 16, -28, 
18, -10, 16};
const int8_t frame1[MOTORS_KAMU] = {
10, 0, -36, 
0, -12, 16, 
-18, -2, -12, 
2, 0, 14, 
-4, 2, -26, 
34, 8, 0};
const int8_t frame2[MOTORS_KAMU] = {
72, 0, -26, 
68, -12, 12, 
-4, 8, -12, 
-72, 0, 26, 
-68, 12, -12, 
4, -8, 12};
const int8_t frame3[MOTORS_KAMU] = {
28, 0, -50, 
-62, -12, 12, 
-18, -6, -12, 
-28, 0, 50, 
62, 12, -12, 
18, 6, 12};
const int8_t frame4[MOTORS_KAMU] = {
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0};
const int8_t frame5[MOTORS_KAMU] = {
-18, 0, -16, 
0, -10, -2, 
8, 6, -10, 
-110, 0, 10, 
0, 10, -6, 
-4, -10, 10};
const int8_t frame6[MOTORS_KAMU] = {
-18, 0, -16, 
0, -10, 0, 
4, 4, -10, 
4, 0, 94, 
0, 10, 6, 
-16, -10, 10};
const int8_t frame7[MOTORS_KAMU] = {
-18, 0, -16, 
0, -10, 14, 
-20, -6, -10, 
-114, 0, 10, 
0, 10, -14, 
10, -4, 10};
const int8_t frame8[MOTORS_KAMU] = {
-18, -16, -16, 
0, -10, 12, 
-10, 2, -10, 
-116, 16, 10, 
0, 10, -6, 
-2, -10, 10};
const int8_t frame9[MOTORS_KAMU] = {
96, 0, -14, 
48, -10, 16, 
-30, -14, -10, 
0, 0, 20, 
-14, 0, -24, 
32, 8, 0};
const int8_t frame10[MOTORS_KAMU] = {
54, 0, -12, 
34, -14, 14, 
-6, 8, -14, 
0, 0, 30, 
12, 0, -30, 
36, 6, 0};
const int8_t frame11[MOTORS_KAMU] = {
54, 0, -12, 
64, -16, 28, 
-32, -4, -16, 
-12, 0, 94, 
-2, 0, -36, 
36, 0, 0};
const int8_t frame12[MOTORS_KAMU] = {
12, 0, -94, 
2, 0, 30, 
-36, -6, 0, 
-54, 0, 12, 
-64, 16, -24, 
32, 8, 16};
const int8_t frame13[MOTORS_KAMU] = {
-26, 0, -30, 
20, 0, 16, 
-18, 0, -2, 
26, 0, 30, 
-20, 0, 0, 
0, 0, 0};
const int8_t frame14[MOTORS_KAMU] = {
78, 0, 0, 
10, -2, 22, 
-24, -2, -2, 
-4, 0, 18, 
-10, 2, -22, 
24, 2, 2};
const int8_t frame15[MOTORS_KAMU] = {
0, 0, -16, 
0, -16, 22, 
-22, 0, -16, 
0, 0, 16, 
0, 16, -22, 
22, 0, 16};
const int8_t frame16[MOTORS_KAMU] = {
-6, 0, -50, 
40, -10, 4, 
0, 4, -10, 
6, 0, 50, 
-40, 10, -4, 
0, -4, 10};
const int8_t frame17[MOTORS_KAMU] = {
0, 0, -6, 
0, 0, 0, 
0, 0, 0, 
0, 0, 6, 
0, 0, 0, 
0, 0, 0};

/*
FRAME_LENGTH 크기에 맞춰 배열을 작성해 주세요.
*/
const int8_t *motion0_angles[FRAME_LENGTH] = {
(int8_t *)&frame0, (int8_t *)&frame1, (int8_t *)&frame2, (int8_t *)&frame3, (int8_t *)&frame4, 
(int8_t *)&frame5, (int8_t *)&frame6, (int8_t *)&frame7, (int8_t *)&frame8, (int8_t *)&frame9, 
(int8_t *)&frame10, (int8_t *)&frame11, (int8_t *)&frame12, (int8_t *)&frame13, (int8_t *)&frame14, 
(int8_t *)&frame15, (int8_t *)&frame16, (int8_t *)&frame17};

//===============================TempMotion 시간 설정===========================
/*
프레임별 동작 시간을 설정합니다.
FRAME_LENGTH 크기에 맞춰 배열을 작성해 주세요.
*/
const uint16_t motion0_times[FRAME_LENGTH] = {
500, 500, 600, 750, 
400, 550, 600, 600, 600, 
600, 600, 600, 600, 600, 
600, 500, 600, 600};
